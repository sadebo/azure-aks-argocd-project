# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
.terraform.d/
.terraform.d/*
.terraform.d/plugins/
.terraform.d/plugin-cache/
.terraform.d/plugin-cache/*
.terraform.d/credentials.tfrc.json
.terraform.d/credentials.tfrc.json
.terraform.d/override.tf
.terraform.d/override.tf.json
.terraform.d/*.override.tf
.terraform.d/*.override.tf.json
.terraform.d/plugin-cache/*.zip
.terraform.d/plugin-cache/*.tar.gz
.terraform.d/plugin-cache/*.tgz
.terraform.d/plugin-cache/*.tar
.terraform.d/plugin-cache/*.exe
.terraform.d/plugin-cache/*.dll
.terraform.lock.hcl # Ignore dependency lock file, it is recommended to check this in for teams
# Local environment variables file
# .envrc
.env
.env.*local
# IDEs and editors      
.vscode/
.idea/
*.swp
*~
.DS_Store
terraform/.terraform.lock.hcl
